---

- name: get checksum of k0s config file on ansible controller
  delegate_to: localhost
  stat:
    path: "{{ k0s_local_tmp_directory }}/admin.conf"
    get_md5: false
    get_mime: false
    get_attributes: false
  register: k0s_admin_conf
  changed_when: not k0s_admin_conf.stat.exists

- name: save config file to ansible controller
  become: true
  fetch:
    src: "{{ k0s_data_dir }}/pki/admin.conf"
    dest: "{{ k0s_local_tmp_directory }}/admin.conf"
    flat: true
    validate_checksum: false
    mode: 0644
  when:
    - not k0s_admin_conf.stat.exists or
      ansible_local.k0s.config_checksum != k0s_admin_conf.stat.checksum

- name: get checksum of k0s kubeconfig file on ansible controller
  delegate_to: localhost
  stat:
    path: "{{ k0s_artifacts_dir }}/k0s-kubeconfig.yml"
    get_md5: false
    get_mime: false
    get_attributes: false
  register: k0s_kubeconfig
  changed_when: not k0s_kubeconfig.stat.exists

- name: copy admin config file to k0s kubeconfig
  delegate_to: localhost
  copy:
    src: "{{ k0s_local_tmp_directory }}/admin.conf"
    dest: "{{ k0s_artifacts_dir }}/k0s-kubeconfig.yml"
    remote_src: true
    mode: 0644
  when:
    - not k0s_kubeconfig.stat.exists

- name:
  block:
    - name: read kubeconfig
      delegate_to: localhost
      slurp:
        src: "{{ k0s_artifacts_dir }}/k0s-kubeconfig.yml"
      register: k0s_kubeconfig_content

    - name: set controller IP in kubeconfig
      delegate_to: localhost
      replace:
        path: "{{ k0s_artifacts_dir }}/k0s-kubeconfig.yml"
        regexp: 'localhost'
        replace: "{{ ansible_default_ipv4.address }}"
      when:
        - k0s_kubeconfig_content is defined
        - k0s_kubeconfig_content.content is defined
        - not k0s_kubeconfig_content.content | b64decode | from_yaml | k8s_cluster_url(ansible_default_ipv4.address)

...
