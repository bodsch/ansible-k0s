---

- name: configure nodes
  debug:
    msg:
      - "{{ k0s_cluster_nodes.initial_controller }}"
  run_once: true

- name: create k0s initial controller service with install command
  k0s_install:
    state: controller
    config: "{{ k0s_config_dir }}/k0s.yaml"
    data_dir: "{{ k0s_data_dir }}"
    arguments: "{{ k0s_extra_args | default([]) }}"
  notify:
    - daemon-reload
    - restart k0s_controller
  register: install_initial_controller_cmd

- name: arm specific systemd drop-in
  block:
    - name: create k0scontroller service drop-in directory
      file:
        path: /etc/systemd/system/k0scontroller.service.d
        state: directory
        mode: 0750

    - name: create overwrite.conf
      template:
        src: init/systemd/overwrite.conf.j2
        dest: /etc/systemd/system/k0scontroller.service.d/overwrite.conf
        mode: 0644
      notify:
        - daemon-reload
        - restart k0s_controller

  when:
    - (ansible_facts.architecture is search("arm") and
       ansible_facts.userspace_bits == "64" ) or
      ansible_facts.architecture is search("aarch64")

- name: flush handlers
  meta: flush_handlers

- name: start k0s controller
  service:
    name: k0scontroller
    state: started

- name: wait for k8s apiserver
  wait_for:
    host: localhost
    port: 6443
    delay: 15
    timeout: 180

# # TODO
# - name: copy config file to user home directory
#   copy:
#     src: "{{ k0s_data_dir }}/pki/admin.conf"
#     dest: ~{{ ansible_user }}/k0s-kubeconfig.yml
#     remote_src: true
#     owner: "{{ ansible_user }}"
#     mode: 0644
#
# # TODO
# - name: Set controller IP in kubeconfig
#   replace:
#     path: ~{{ ansible_user }}/k0s-kubeconfig.yml
#     regexp: 'localhost'
#     replace: "{{ ansible_host }}"
#
# # TODO
# - name: get kubeconfig from k0s initial controller
#   become: false
#   fetch:
#     src: "~{{ ansible_user }}/k0s-kubeconfig.yml"
#     dest: "{{ k0s_artifacts_dir }}/k0s-kubeconfig.yml"
#     flat: true
#     validate_checksum: false
#
# - name: "print kubeconfig command"
#   debug:
#     msg: "To use Cluster: export KUBECONFIG={{ k0s_artifacts_dir }}/k0s-kubeconfig.yml"

...
