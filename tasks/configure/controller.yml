---

- name: configure controllers
  ansible.builtin.debug:
    msg:
      - "{{ k0s_cluster_nodes.controllers | join(', ') }}"

- name: get k0s state
  k0s_status:
    state: controller
    data_dir: "{{ k0s_data_dir }}"
  register: controller_k0s_state

- name: register controller
  when:
    - not controller_k0s_state.state | default('missing') | string == "installed"
  block:
    - name: create controller join token
      delegate_to: "{{ k0s_cluster_nodes.initial_controller }}"
      k0s_token:
        state: create
        role: controller
        expiry: "{{ k0s_token_expiry }}"
        data_dir: "{{ k0s_data_dir }}"
      register: controller_join_token

    - name: fail when no token returned
      ansible.builtin.fail:
        msg: "missing token to join controllers"
      when:
        - not controller_join_token is defined or
          not controller_join_token.token is defined

    - name: write the k0s token file on controller
      ansible.builtin.copy:
        dest: "{{ k0s_token_files.controller }}"
        content: "{{ controller_join_token.token }}"
        owner: "{{ k0s_system_user }}"
        group: "{{ k0s_system_user }}"
        mode: 0600

    - name: create k0s controller service with install command
      k0s_install:
        state: controller
        force: "{{ k0s_force }}"
        config: "{{ k0s_config_dir }}/k0s.yaml"
        token_file: "{{ k0s_token_files.controller }}"
        data_dir: "{{ k0s_data_dir }}"
        arguments: "{{ k0s_extra_args | default([]) }}"
      notify:
        - daemon-reload
        - restart k0s_controller
      register: install_controller_cmd
  rescue:
    - name: reset full k0s config and data_dir
      k0s_reset:
        data_dir: "{{ k0s_data_dir }}"
        config: "{{ k0s_config_dir }}/k0s.yaml"
      register: _k0s_reset
      when:
        - stat_k0s_binary.stat.exists
      tags:
        - k0s_reset

    - name: clean up the mess
      ansible.builtin.file:
        path: "{{ k0s_config_dir }}/k0s.yaml"
        state: absent

    - name: exit with fail
      ansible.builtin.fail:
        msg: "Error while join controllers!"

- name: arm specific systemd drop-in
  when:
    - (ansible_facts.architecture is search("arm") and
       ansible_facts.userspace_bits == "64" ) or
      ansible_facts.architecture is search("aarch64")
  block:
    - name: create k0scontroller service drop-in directory
      ansible.builtin.file:
        path: /etc/systemd/system/k0scontroller.service.d
        state: directory
        mode: 0750

    - name: create overwrite.conf
      ansible.builtin.template:
        src: init/aarch64/systemd/overwrite.conf.j2
        dest: /etc/systemd/system/k0scontroller.service.d/overwrite.conf
        mode: 0644
      notify:
        - daemon-reload
        - restart k0s_controller

- name: flush handlers
  ansible.builtin.meta: flush_handlers

# - name: Wait until the process is finished and {{ k0s_data_dir }}/pki/admin.conf was created
#   ansible.builtin.wait_for:
#     path: "{{ k0s_data_dir }}/pki/admin.conf"
#     state: present

- name: start k0s controller
  ansible.builtin.service:
    name: k0scontroller
    state: started
  register: k0scontroller_started
  notify:
    - wait for k8s apiserver

...
