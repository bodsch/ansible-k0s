---

- name: prepare
  import_tasks: prepare.yml
  tags:
    - k0s_prepare
    - k0s_reset
    - k0s_download
    - k0s_install
    - k0s_configure

- name: download binary
  import_tasks: download.yml
  when:
    - not stat_k0s_binary.stat.exists
  tags:
    - k0s_download
    - k0s_install

- name: install
  import_tasks: install.yml
  tags:
    - k0s_download
    - k0s_install

- name: configure k0s
  import_tasks: configure/main.yml
  tags:
    - k0s_configure

- name: configure initial cluster k0s controller
  import_tasks: configure/initial_controller.yml
  when:
    - ansible_hostname == k0s_cluster_nodes.initial_controller or
      ansible_fqdn == k0s_cluster_nodes.initial_controller
  tags:
    - k0s_initial_controller

- name: configure k0s controller
  import_tasks: configure/controller.yml
  when:
    - k0s_cluster_nodes.controllers | count > 0
    - ansible_hostname in k0s_cluster_nodes.controllers or
      ansible_fqdn in k0s_cluster_nodes.controllers
  tags:
    - k0s_controller

- name: configure k0s worker
  import_tasks: configure/worker.yml
  when:
    - k0s_cluster_nodes.workers | count > 0
    - ansible_hostname in k0s_cluster_nodes.workers or
      ansible_fqdn in k0s_cluster_nodes.workers
  tags:
    - k0s_worker

- name: service
  import_tasks: service.yml
  tags:
    - k0s_service

- name: create facts
  import_tasks: facts.yml
  tags:
    - k0s_initial_controller

- name: finalize
  tags:
    - k0s_finalize
  block:
    - name: run finalize
      import_tasks: finalize.yml
      when:
        - ansible_hostname == k0s_cluster_nodes.initial_controller or
          ansible_fqdn == k0s_cluster_nodes.initial_controller

    - name: print kubeconfig command
      debug:
        msg: "To use Cluster: 'export KUBECONFIG={{ k0s_artifacts_dir }}/k0s-kubeconfig.yml'"
      run_once: true
      #tags:
      #  - k0s_finalize
...
