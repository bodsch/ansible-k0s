---

- name: include OS specific configuration ({{ ansible_distribution }} ({{ ansible_os_family }}) {{ ansible_distribution_major_version }})
  ansible.builtin.include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      paths:
        - "vars"
      files:
        # eg. debian-10 / ubuntu-20.04 / centos-8 / oraclelinux-8
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}.yml"
        # eg. archlinux-systemd / archlinux-openrc
        - "{{ ansible_distribution | lower }}-{{ ansible_service_mgr | lower }}.yml"
        # eg. debian / ubuntu / centos / oraclelinux
        - "{{ ansible_distribution | lower }}.yml"
        # eg. redhat / debian / archlinux
        - "{{ ansible_os_family | lower }}.yml"
        - default.yaml
      skip: true

- name: dependecies
  when:
    - k0s_requirements is defined
    - k0s_requirements | count > 0
  block:
    - name: install dependency
      ansible.builtin.package:
        name: "{{ k0s_requirements }}"
        state: present

    - name: update facts to get latest information
      ansible.builtin.setup:
        # gather_subset:
        #   - '!all'
        #   - '!any'
        #   - facter


# - name: detect our installation path '{{ k0s_install_path | dirname }}'
#   ansible.builtin.stat:
#     path: "{{ k0s_install_path | dirname }}"
#     get_checksum: false
#   register: stat_k0s_path
#   ignore_errors: true
#
# - name: remove installed k0s
#   ansible.builtin.file:
#     state: absent
#     path: "{{ stat_k0s_path.stat.path }}"
#   when:
#     - stat_k0s_path is defined
#     - stat_k0s_path.stat is defined
#     - stat_k0s_path.stat.isdir is defined
#     - not stat_k0s_path.stat.isdir
#
# - name: flush handlers
#   ansible.builtin.meta: flush_handlers
#
# - name: detect installed k0s binary
#   ansible.builtin.stat:
#     path: "{{ k0s_install_path }}/k0s"
#   register: stat_k0s_binary


- name: merge k0s configuration between defaults and custom
  ansible.builtin.set_fact:
    k0s_config_overwrites: "{{ k0s_defaults_config_overwrites | combine(k0s_config_overwrites, recursive=True) }}"
    k0s_extra_arguments: "{{ k0s_defaults_extra_arguments | combine(k0s_extra_arguments, recursive=True) }}"

...
