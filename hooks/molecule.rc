
TOX_ARGS=

if [ -n "${TOX_SCENARIO}" ]
then
  TOX_ARGS="--scenario-name ${TOX_SCENARIO}"
fi

TOX_OPTS="-e ${TOX_ANSIBLE}"

vercomp() {

  [[ $1 == $2 ]] && return 0
  v1=$(echo "$1" | sed -e 's|-|.|g')
  v2=$(echo "$2" | sed -e 's|-|.|g')

  local IFS=.
  local i ver1=($1) ver2=($2)
  # fill empty fields in ver1 with zeros
  for ((i=${#ver1[@]}; i<${#ver2[@]}; i++))
  do
    ver1[i]=0
  done

  for ((i=0; i<${#ver1[@]}; i++))
  do
    if [[ -z ${ver2[i]} ]]
    then
      # fill empty fields in ver2 with zeros
      ver2[i]=0
    fi
    if ((10#${ver1[i]} > 10#${ver2[i]}))
    then
      return 1
    fi
    if ((10#${ver1[i]} < 10#${ver2[i]}))
    then
      return 2
    fi
  done
  return 0
}

install_collection() {
  local collection="${1}"

  echo "Install the required collection '${collection}'"
  ansible-galaxy collection install ${collection}
}

remove_collection() {

  local collection="${1}"

  namespace="$(echo "${collection}" | cut -d '.' -f1)"
  name="$(echo "${collection}" | cut -d '.' -f2)"

  collection="${HOME}/.ansible/collections/ansible_collections/${namespace}/${name}"

  rm \
    --recursive \
    --force \
    "${collection}"
}

publish() {

  TOKEN="${HOME}/.ansible/galaxy_token"

  if [ -e "${TOKEN}" ]
  then
    ansible-galaxy import --token=$(cat "${TOKEN}") bodsch # "???"
  fi
}
